
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    profiles: ["infra"]
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_DATA_DIR: /var/lib/zookeeper/data
      ZOOKEEPER_DATA_LOG_DIR: /var/lib/zookeeper/log
    ports:
      - "2181:2181"
    networks:
      - container_local
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    profiles: ["infra"]
    depends_on:
      zookeeper:
          condition: service_healthy

    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: orders-example-zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - container_local


  app:
    build: .
    env_file: .env
    profiles: ["api"]
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    ports:
      - "8000:8000"
    volumes:
      - ./src:/opt/app/src
    networks:
      - container_local

  db:
    image: postgres:latest
    profiles: ["infra"]
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - container_local

volumes:
  postgres_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data:

networks:
  container_local:
    external: true